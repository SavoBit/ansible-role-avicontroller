#!/bin/bash

# Set common variables
container=avicontroller
service_desc="Avi Controller"
docker_exec=/usr/bin/docker
logfile="/var/log/${container}.log"
cidfile="/var/run/${container}.cid"
image_name="avinetworks/controller"
tag="{{ con_version }}"
dev_name="{{ dev_name }}"
docker_run_params="{{ docker_run_params }}"


write_log() {
  echo $1 2>&1 | tee -a ${logfile}
}

remove_container() {
  write_log "[`date`] Removing existing ${container} container"
  /usr/bin/docker rm -f ${container}
  if [ $? -eq 0 ]; then
    write_log "[`date`] Removed existing ${container} container"
  else
    write_log "[`date`] Failed to remove existing ${container} container"
  fi
}

prestart() {
  # Clean up any running or existing avicontroller containers
  write_log "[`date`] Performing ${container} pre-start steps"
  if $(docker ps -a -f name=${container} | grep -q ${container}); then
    write_log "[`date`] Already running ${container} container performing cleanup"
    remove_container
  fi
}

start() {
  prestart
  write_log "[`date`] Starting the ${container} container"
  /usr/bin/docker run ${docker_run_params} ${image_name}:${tag}
  if [ $? -eq 0 ]; then
    write_log "[`date`] Service ${container} running..."
    /usr/bin/docker wait ${container}
  else
    write_log "[`date`] Failed to start the ${container} container"
    exit 1
  fi
}

stop() {
  # Stopping the docker process if running
  if $(docker ps -f name=${container} | grep -q ${container}); then
    write_log "[`date`] Service ${container} stopping..."
    /usr/bin/docker stop -t 60 ${container}
    if [ $? -eq 0 ]; then
      write_log "[`date`] Stopped the ${container} container"
    else
      exit 1
    fi
  else
    write_log "[`date`] Service ${container} already stopped"
  fi
  poststop
}

poststop() {
  if $(ip addr | grep -q ${dev_name}:avivip); then
    /bin/bash -c "ip addr del $(ip addr | grep ${dev_name}:avivip | awk '{print $2}') dev ${dev_name}"
    if [ $? -eq 0 ]; then
      write_log "[`date`] Successfuly removed the cluster vip interface."
    fi
  elif $(ip addr | grep -q ${dev_name}:1); then
    /bin/bash -c "ip addr del $(ip addr | grep ${dev_name}:1 | awk '{print $2}') dev ${dev_name}"
    if [ $? -eq 0 ]; then
      write_log "[`date`] Successfuly removed the cluster vip interface."
    fi
  fi
  if $(docker ps -a -f name=${container} | grep -q ${container}); then
    remove_container
  fi
}

restart() {
  stop
  start
}

reload() {
  restart
}

status() {
  if $(docker ps -f name=${container} | grep -q ${container}); then
    echo "${container} running..."
  else
    echo "${container} stopped"
  fi
}

case "$1" in
  start|stop|status|restart|reload)
    $1
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload}"
    exit 2
esac

exit $?
